@model Web_DSM.Models.ProductoViewModel
@using System.Web;
@using Práctica3GenNHibernate.EN.Práctica3;
@using Práctica3GenNHibernate.CEN.Práctica3;

@{
    ViewBag.Title = "Detalles";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<a href="@Url.Action("Index", "Producto")" class="bi bi-arrow-left-circle-fill fs-3"></a>

<div class="container-fluid">
    <div class="row">
        <div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-6 col-xxl-6 d-inline-block">
            <img src="@Html.DisplayFor(model => model.Imagen)" width="500" height="500" />
        </div>
        <div class="col-12 col-sm-12 col-md-12 col-lg-6 col-xl-6 col-xxl-6 d-inline-block">
            <h3 class="d-inline-block">@Html.DisplayFor(model => model.Nombre)</h3>
            <p class="badge text-wrap fs-7 d-inline-block m-2 genero">@Html.DisplayFor(model => model.Genero)
            <p><strong>@Html.DisplayNameFor(model => model.Descripcion):</strong> @Html.DisplayFor(model => model.Descripcion)</p>
            <p>@Html.DisplayFor(model => model.Precio)</p>
            <p>
                <strong>Valoración: </strong>
                @if (Model.ValoracionMedia != 0)
                {
                    for (var i = 0; i < Model.ValoracionMedia; i++)
                    {
                        <span>&#9733;</span>
                    }
                    for (var i = 0; i < (5 - Model.ValoracionMedia); i++)
                    {
                        <span>&#9734;</span>
                    }
                }
                else
                {
                    <span>&#9733;</span>
                    <span>&#9734;</span>
                    <span>&#9734;</span>
                    <span>&#9734;</span>
                    <span>&#9734;</span>
                }
            </p>
            @if (Session["usuario"] != null)
            {
                if (((ClienteEN)Session["usuario"]).GeneroFav == Model.Genero)
                {
                    <p class="badge text-wrap fs-7 recomendado me-3">Recomendado para tí</p>
                }

                bool encontrado = false;
                ProductoCEN prodCEN = new ProductoCEN();
                IList<ProductoEN> listProdEn = prodCEN.DameListaFavoritosCliente(((ClienteEN)Session["usuario"]).Email);
                foreach (ProductoEN prod in listProdEn)
                {
                    if (prod.Id == Model.Id)
                    {
                        encontrado = true;
                    }
                }
                if (encontrado)
                {
                    <a href="@Url.Action("QuitarDeFavoritos", "Producto", routeValues: new { idProducto = Model.Id })">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-heart-fill" viewBox="0 0 16 16">
                            <path fill-rule="evenodd" d="M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z" />
                        </svg>
                    </a>
                }
                else
                {
                    <a href="@Url.Action("AnyadirAFavoritos", "Producto", routeValues: new { idProducto = Model.Id })">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-heart" viewBox="0 0 16 16">
                            <path d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z" />
                        </svg>
                    </a>
                }

            }
            @if (Model.Stock != 0)
            {
                <p>Quedan @Html.DisplayFor(modelItem => Model.Stock) unidades</p>
                if (Session["usuario"] != null)
                {
                    Session["stock"] = Model.Stock;
                    Session["idProducto"] = Model.Id;
                    { Html.RenderAction("Create", "LineaPedido"); }
                }
                else
                {
                    <p>Para poder comprar el producto, @Html.ActionLink("inicia sesión", "Login", "Account")</p>
                }
            }
            else
            {
                <p class="text-danger fw-bold"> Sin Stock </p>
            }
        </div>
    </div>
</div>
<hr />
<h3><stong>Comentarios</stong></h3>
<hr />
<div class="comments-container">
    <!--Hacemos que si hay un usuario con sesíon iniciada se muestre en primer lugar su comentario si es que tiene uno-->
    @{
        int cont = 0;
        bool ya_ha_comentado = false;
        string emailCliente = "";
    }
    @if (Session["usuario"] != null)
    {
        emailCliente = ((ClienteEN)Session["usuario"]).Email;
        foreach (var item in Model.Comentarios)
        {
            if (Model.EmailUsuario[cont] == emailCliente)
            {
                <div>
                    <h5 class="d-inline-block"><strong>@Html.DisplayFor(model => model.NombreUsuario[cont])</strong> (Tú)</h5>
                    <a class="btn btn-block text-center my-3 bi bi-pencil-square" href="@Url.Action("Edit", "Valoracion", routeValues: new { idValoracion = Model.IdValoracionCliente[cont], idProducto = Model.Id })"></a>
                    <a class="btn btn-block text-center my-3 bi bi-trash3-fill" href="@Url.Action("Delete", "Valoracion", routeValues: new { idValoracion = Model.IdValoracionCliente[cont], idProducto = Model.Id })"></a>
                    <p class="ms-1">
                        @if (Model.ValoracionCliente[cont] > 0)
                        {
                            for (var i = 0; i < Model.ValoracionCliente[cont]; i++)
                            {
                                <span>&#9733;</span>
                            }
                            for (var i = 0; i < (5 - Model.ValoracionCliente[cont]); i++)
                            {
                                <span>&#9734;</span>
                            }
                        }
                        else
                        {
                            <span>&#9733;</span>
                            <span>&#9734;</span>
                            <span>&#9734;</span>
                            <span>&#9734;</span>
                            <span>&#9734;</span>
                        }
                    </p>
                    <p>@Html.DisplayFor(model => model.Comentarios[cont])</p>
                </div>
                ya_ha_comentado = true;
            }
            cont++;
        }
    }
    @{ cont = 0; }
    @foreach (var item in Model.Comentarios)
    {
        if (Model.EmailUsuario[cont] != emailCliente)
        {
            <div>
                <h4><strong>@Html.DisplayFor(model => model.NombreUsuario[cont])</strong></h4>
                <p class="valoracion">
                    @if (Model.ValoracionCliente[cont] > 0)
                    {
                        for (var i = 0; i < Model.ValoracionCliente[cont]; i++)
                        {
                            <span>&#9733;</span>
                        }
                    }
                    else
                    {
                        <span>&#9733;</span>
                    }
                </p>
                <p>@Html.DisplayFor(model => model.Comentarios[cont])</p>
            </div>
        }
        cont++;
    }
    @if (Model.Comentarios.Count() == 0)
    {
        <p>Aún no hay comentarios</p>
    }
</div>
@if (Session["usuario"] != null && !ya_ha_comentado)
{
    @Html.ActionLink("Añadir comentario", "Create", "Valoracion", routeValues: new { idProducto = Model.Id }, htmlAttributes: new { @class = "btn btn-block text-center my-3" })
}



