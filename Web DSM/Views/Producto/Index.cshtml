@model IEnumerable<Web_DSM.Models.ProductoViewModel>
@using Práctica3GenNHibernate.EN.Práctica3;
@using Práctica3GenNHibernate.CEN.Práctica3;

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="jumbotron">
    <h1 class="melody-records">MELODY RECORDS</h1>
    <p class="lead">Encuentra tus discos, vinilos y demás artículos de tus artistas favoritos</p>
</div>

<div class="container-fluid">
    <div class="dropdown">
        <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
            Filtrar por Género
            <span class="caret"></span>
        </button>
        <div class="row" style="background-color:gray">
            <div class="col-sm-12" style="background-color: gray"></div>
        </div>
        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
            @{ List<string> generos = new List<string>(); }
            @foreach (var item in Model)
            {
                if (!generos.Contains(item.Genero))
                {
                    <li>@Html.ActionLink(item.Genero, "PorGenero", "Producto", routeValues: new { genero = item.Genero }, htmlAttributes: new { @class = "dropdown-item" })</li>
                }
                generos.Add(item.Genero);
            }
        </ul>
    </div>
</div>

<div class="container-fluid index-container">
    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6">
                <img src="@Html.DisplayFor(modelItem => item.Imagen)" height="450" width="450" />
                <p class="product-name">@Html.DisplayFor(modelItem => item.Nombre)</p>
                <div>
                    <p>Valoración media: @Html.DisplayFor(modelItem => item.ValoracionMedia)/5 &#9733;</p>
                    <p>@Html.DisplayFor(modelItem => item.Precio)</p>
                    <p class="product-type">@Html.DisplayFor(modelItem => item.Genero)</p>
                </div>
                @if (item.Stock == 0)
                {
                    <p>Sin stock</p>
                }
                else
                {
                    <p>Quedan @Html.DisplayFor(modelItem => item.Stock) unidades</p>
                }
                @if (Session["usuario"] != null)
                {
                    if (((ClienteEN)Session["usuario"]).GeneroFav == item.Genero)
                    {
                        <p>Recomendado para tí</p>
                    }

                    bool encontrado = false;
                    ProductoCEN prodCEN = new ProductoCEN();
                    IList<ProductoEN> listProdEn = prodCEN.DameListaFavoritosCliente(((ClienteEN)Session["usuario"]).Email);
                    foreach (ProductoEN prod in listProdEn)
                    {
                        if (prod.Id == item.Id)
                        {
                            encontrado = true;
                        }
                    }
                    if (encontrado)
                    {
                        <a href="@Url.Action("QuitarDeFavoritos", "Producto", routeValues: new { idProducto = item.Id })">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-heart-fill" viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z" />
                            </svg>
                        </a>
                    }
                    else
                    {
                        <a href="@Url.Action("AnyadirAFavoritos", "Producto", routeValues: new { idProducto = item.Id })">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-heart" viewBox="0 0 16 16">
                                <path d="m8 2.748-.717-.737C5.6.281 2.514.878 1.4 3.053c-.523 1.023-.641 2.5.314 4.385.92 1.815 2.834 3.989 6.286 6.357 3.452-2.368 5.365-4.542 6.286-6.357.955-1.886.838-3.362.314-4.385C13.486.878 10.4.28 8.717 2.01L8 2.748zM8 15C-7.333 4.868 3.279-3.04 7.824 1.143c.06.055.119.112.176.171a3.12 3.12 0 0 1 .176-.17C12.72-3.042 23.333 4.867 8 15z" />
                            </svg>
                        </a>
                    }

                }
                @Html.ActionLink("Detalles", "Details", new { id = item.Id })
            </div>
        }
    </div>
</div>


